I"b<blockquote>
  <p>最近在做一个javaweb项目，需求是有一个用xml生成的word，需要转化成pdf格式，但是借助openoffice没办法实现，还有一些其他插件，转成pdf后是xml内容，而且还有的直接报错。最后从网上找到了jacob(Java COM Bridge)
优点:可以实用我上述提到的需求，而且来说转化的比较成功，格式保留的都比较好;
缺点:由于要集成.dll文件，所以只能在windows平台运行。</p>
</blockquote>

<h3 id="下载文件">下载文件</h3>
<p>可以直接百度到我就不放文件了，直接放一个地址吧<a href="https://sourceforge.net/projects/jacob-project/">https://sourceforge.net/projects/jacob-project/</a></p>

<h3 id="配置">配置</h3>
<p>配置除了映入jar包外，还需要把.dll文件放到项目对应的jdk目录的jre目录下</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>注意：所选的64位和32位是根据你的jdk来看的，不是windows系统
</code></pre></div></div>
<h3 id="试例">试例</h3>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import java.io.File<span class="p">;</span>
import com.jacob.activeX.ActiveXComponent<span class="p">;</span>
import com.jacob.com.Dispatch<span class="p">;</span>

public class worktest <span class="o">{</span>

    public static void main<span class="o">(</span>String args[]<span class="o">)</span> <span class="o">{</span>
        ActiveXComponent app <span class="o">=</span> null<span class="p">;</span>
        String wordFile <span class="o">=</span> <span class="s2">"d:/a.doc"</span><span class="p">;</span>
       String pdfFile <span class="o">=</span> <span class="s2">"d:/a.pdf"</span><span class="p">;</span>
       System.out.println<span class="o">(</span><span class="s2">"开始转换..."</span><span class="o">)</span><span class="p">;</span>
       // 开始时间
       long start <span class="o">=</span> System.currentTimeMillis<span class="o">()</span><span class="p">;</span>  
       try <span class="o">{</span>
        // 打开word
        app <span class="o">=</span> new ActiveXComponent<span class="o">(</span><span class="s2">"Word.Application"</span><span class="o">)</span><span class="p">;</span>
        // 设置word不可见,很多博客下面这里都写了这一句话，其实是没有必要的，因为默认就是不可见的，如果设置可见就是会打开一个word文档，对于转化为pdf明显是没有必要的
        //app.setProperty<span class="o">(</span><span class="s2">"Visible"</span>, <span class="nb">false</span><span class="o">)</span><span class="p">;</span>
        // 获得word中所有打开的文档
        Dispatch documents <span class="o">=</span> app.getProperty<span class="o">(</span><span class="s2">"Documents"</span><span class="o">)</span>.toDispatch<span class="o">()</span><span class="p">;</span>
        System.out.println<span class="o">(</span><span class="s2">"打开文件: "</span> + wordFile<span class="o">)</span><span class="p">;</span>
        // 打开文档
        Dispatch document <span class="o">=</span> Dispatch.call<span class="o">(</span>documents, <span class="s2">"Open"</span>, wordFile, <span class="nb">false</span>, <span class="nb">true</span><span class="o">)</span>.toDispatch<span class="o">()</span><span class="p">;</span>
        // 如果文件存在的话，不会覆盖，会直接报错，所以我们需要判断文件是否存在
        File target <span class="o">=</span> new File<span class="o">(</span>pdfFile<span class="o">)</span><span class="p">;</span>  
         <span class="k">if</span> <span class="o">(</span>target.exists<span class="o">())</span> <span class="o">{</span>  
            target.delete<span class="o">()</span><span class="p">;</span>
         <span class="o">}</span>
        System.out.println<span class="o">(</span><span class="s2">"另存为: "</span> + pdfFile<span class="o">)</span><span class="p">;</span>
        // 另存为，将文档报错为pdf，其中word保存为pdf的格式宏的值是17
        Dispatch.call<span class="o">(</span>document, <span class="s2">"SaveAs"</span>, pdfFile, 17<span class="o">)</span><span class="p">;</span>
        // 关闭文档
        Dispatch.call<span class="o">(</span>document, <span class="s2">"Close"</span>, <span class="nb">false</span><span class="o">)</span><span class="p">;</span>
        // 结束时间
        long end <span class="o">=</span> System.currentTimeMillis<span class="o">()</span><span class="p">;</span>
        System.out.println<span class="o">(</span><span class="s2">"转换成功，用时："</span> + <span class="o">(</span>end - start<span class="o">)</span> + <span class="s2">"ms"</span><span class="o">)</span><span class="p">;</span>
       <span class="o">}</span>catch<span class="o">(</span>Exception e<span class="o">)</span> <span class="o">{</span>
        System.out.println<span class="o">(</span><span class="s2">"转换失败"</span>+e.getMessage<span class="o">())</span><span class="p">;</span>
       <span class="o">}</span>finally <span class="o">{</span>
            // 关闭office
        app.invoke<span class="o">(</span><span class="s2">"Quit"</span>, 0<span class="o">)</span><span class="p">;</span>
       <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
:ET